@page "/counter"

@inject INotificationRepository _notificationRepository

<h1>Counter</h1>

<p>Current count: @currentCount</p>

<Button class="btn btn-primary" @onclick="IncrementCount">Click me</Button>
<br />
<br />

@if (newNotifications > 0)
{
    <a class="btn btn-success" href="/Notifications">New Notifications (@newNotifications)</a>
}
else
{
    <a class="btn btn-success" href="/Notifications">Notifications</a>
}

@code {
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }

    private int currentCount = 0;

    private long newNotifications;

    protected override async Task OnInitializedAsync()
    {
        newNotifications = await _notificationRepository.GetNewCount();
    }

    private async Task IncrementCount()
    {
        currentCount++;

        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
            Console.WriteLine($"User {user.Identity.Name} is authenticated.");
        
        else
            Console.WriteLine("User is NOT authenticated.");
    }
}